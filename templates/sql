i nominativi dei clienti che hanno una mail di gmail

select email,first_name,last_name
from Sales.customers
where email LIKE '%@gmail.com%' 
--il nome e i cognomi dei clienti che non abitano a New york
select city,first_name,last_name
from sales.customers
where city <> 'New York'

--lo sconto più alto effetuato da un  prodotto

Select max(discount)*100
from sales.order_items
gli ordini che sono già stati spediti
select * from Sales.orders
where shipped_date is not null
gli ordini che non sono già stati spediti
select * from Sales.orders
where shipped_date is  null

--i prodotti acquistati dal cliente martin spencer

select P.*
from Sales.customers as C
inner join sales.orders as O
on C.customer_id = O.customer_id
inner join sales.order_items as OI
on O.order_id =  OI.order_id
inner join production.products as P
on P.product_id = OI.product_id
where first_name = 'Johnathan' and last_name = 'Velazquez'

--nominativi dei clienti che abitano in California e in Texas

select *
from sales.customers as SC
where state = 'CA' or state = 'TX'

select *
from sales.customers as SC
where state in('CA','TX')

--numero di ordini per ogni cliente

select first_name,last_name, count(*) as num_ordini
from sales.customers
inner join sales.orders 
on sales.customers.customer_id = sales.orders.customer_id
group by customers.customer_id,first_name,last_name
order by num_ordini desc

--numero di dipendenti in ogni store

select store_name,count(*)
from sales.staffs inner join sales.stores 
on  sales.staffs.store_id = sales.stores.store_id 
group by sales.staffs.store_id,store_name

1.avere il gradimento medio dell’ episodio ‘la scatola del bravo ragazzo’ della serie tv Dahmer.

select avg(valutazione)  from episodio inner join serie tv
on episodio.idserie = serietv.id
inner join visualizza on 
episodio.id = visualizza.idepisodio
where serie_tv.nome = ‘Dahmer’ and episodio.titolo = ‘La scatola del bravo ragazzo’

select avg(valutazione) from visualizza where idepisodio = (select id from episodio where nome = ‘la scatola del bravo ragazzo’ and idserie = (select id from serie where nome = ‘Dahmer’))

2. avere l’ elenco della serie tv con il numero degli episodi 
select  serie.nome,count(*)
 from serietv inner join episodio 
on  serie.id = episodio.idserie
group by serie.id,serie.nome

3. utenti che hanno guardato più di 100 episodi 
select utente.nome,utente.cognome,count(*) as num_episodi  from utente
 inner join visualizza 
on visualizza.idutente = utente.id
group by utente.id , utente.nome,utente.cognome
having count(*) > 100 
order by num_episodi desc

4. avere gli utenti che hanno guardato gli episodi di più di 10 serie tv diverse


select utente.nome, utente.cognome,utente.id ,count(serie.id)
from utente 
inner join visualizza 
on utente.id = visualizza.idutente 
inner join episodio 
on episodio.id = visualizza.idepisodio 
inner join serie 
on serie.id = episodio.idserie
group by utente.id ,utente.nome,utente.cognome 
having count(serie.id) > 10




5. aver elenco degli utente che nell’ ultimo mese non hanno guardato la serie tv Dahmer
select utente.id from utente 
where utente.id not in
(select  utente.id from  utente
inner join visualizza on visualizza.idutente = utente.id
inner join episodio 
on episodio.id = visualizza.idepisodio 
inner join serie 
on serie.id = episodio.idserie
--where serie.nome = ‘Dahmer’ and datediff(day,visualizza.date,dateadd(day,-30,getdate()))>0)
datediff(day,visualizza.date,getdate())<30)
where serie.nome = ‘Dahmer’ and visualizza.data between ‘2022-09-20’ and ‘2022-10-20’)

6. avere l’ elenco delle serie di genere drammatico e fantascientifico ordinare in ordine alfabetico visualizzano prima le serie di fantascienza e poi quelle drammatiche

select serie.nome from serie
inner join appartiene
on serie.id = appartiene.idserie
innerjoin genere
on genere.id  = appartiene.idgenere
where genere.nome = ‘drammatico’ or genere.nome =’ fantascienza’
--where genere.nome in(‘drammatico’,’fantascienza’)
order by genere.nome desc, serie.nome
7.avere l’ elenco degli episodi(titolo e serie tv) in cui ha recitato Flavio Nedina
select episodio.titolo,serie.nome from attore
inner join recita 
on attore.id = recita.idattore
inner join episodio
on episodio.id = recita.idepisodio
inner join serie 
on serie.id = episodio.idserie
where attore.nome = ‘Flavio’ and attore.cognome ‘Nedina’ 
8.avere l’ elenco delle serie tv in cui compare la parola ‘The’ all’ inizio del nome della serie tv
select * from serietv 
where nome like ‘The%’


9. utenti che hanno guardato episodi nel settembre del 2022
select count(*) as numero_utenti  from utente 
inner join visualizza 
on utente.id = visualizza.idutente

where visualizza.data between ‘2022-09-01’ and ‘2022-09-30’
10- creare una tabella che rappresentan un ‘ entità
create table genere( id int identity(0,1) primary key,
nome varchar(50)
)
11 creare una tabella di una relazione collegata all’ entità precedente
create table appartiene(
idserie int foreign key references serie(id)
idgenere int int foreign key references genere(id)
)
12.aggiungere il campo numtelefono all’ utente

alter table utente
add Telefono varchar(20)
13. eliminare l’ attributo sesso dall’ utente 
alter table utente 
drop column sesso
14.eliminare tutti gli utenti a cui è scaduto l’ abbonamento

delete from utente
where datafineabbonamento < getdate()



15. modificare la valutazione degli episodi passando da un voto da 1 a 10 a un voto da 1 a 5 stelle
alter table visualizza
alter column  visualizza decimals(2,1)
update visualizza
set valutazione = valutazione/2 
update visualizza 
set valutazione = 1
where valutazione = 0.5






